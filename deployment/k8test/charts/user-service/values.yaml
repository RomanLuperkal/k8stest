replicaCount: 1

ports:
  user_service_port: 8080

user_service:
  DB_HOST: postgresql-0.postgresql.default.svc.cluster.local
  DB_PORT: 5432
  DB_NAME: db1

image:
  repository: user-service
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

probe:
  enabled: false
livenessProbe:
  httpGet:
    port: 8070
    path: /health
  initialDelaySeconds: 30
  failureThreshold: 3
  periodSeconds: 10
readinessProbe:
  exec:
    command: ['sh', '-c', 'pg_isready -U admin']
  initialDelaySeconds: 10        # Время на запуск сервера
  periodSeconds: 5               # Период выполнения команды
  failureThreshold: 3            # После трёх неуспешных проб K8s выключит трафик на под
  timeoutSeconds: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
