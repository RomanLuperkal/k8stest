version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.7.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9091:9091"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      CLUSTER_ID: "kafka-cluster-1"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Добавим CLIENT в listeners
      KAFKA_LISTENERS: "BROKER://0.0.0.0:9094,CLIENT://0.0.0.0:9091,CONTROLLER://0.0.0.0:9093"

      # Теперь BROKER — для Docker, CLIENT — для внешних клиентов (с хоста)
      KAFKA_ADVERTISED_LISTENERS: "BROKER://kafka:9094,CLIENT://localhost:9091"

      # Соответствие протоколов: BROKER и CLIENT — PLAINTEXT, CONTROLLER — внутренний
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "BROKER:PLAINTEXT,CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT"

      # Внутри кластера брокеры общаются через BROKER
      KAFKA_INTER_BROKER_LISTENER_NAME: "BROKER"

      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1

    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "7071:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
    networks:
      - kafka-net

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mem
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

volumes:
  kafka_data:
  prometheus_data:


networks:
  kafka-net:
    driver: bridge